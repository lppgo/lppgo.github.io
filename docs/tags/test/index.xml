<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>test on Even - A super concise theme for Hugo</title><link>https://lppgo.github.io/tags/test/</link><description>Recent content in test on Even - A super concise theme for Hugo</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 24 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://lppgo.github.io/tags/test/index.xml" rel="self" type="application/rss+xml"/><item><title>02-Go TestBenchmark</title><link>https://lppgo.github.io/post/golang/024_go-testbenchmark/</link><pubDate>Tue, 24 May 2022 00:00:00 +0000</pubDate><guid>https://lppgo.github.io/post/golang/024_go-testbenchmark/</guid><description>Go TestBenchmark笔记 Table of Contents ================= Table of Contents Go Test Benchmark 1.1 go test benchmark 示例 1.2 go test benchmark benchstat 比较工具 Go Test Benchmark 在 Go 中，通过撰写 Benchmark 函数可以很方便地对某个功能点进行性</description></item><item><title>01-Go Test笔记</title><link>https://lppgo.github.io/post/golang/023_go-test%E7%AC%94%E8%AE%B0/</link><pubDate>Tue, 21 Dec 2021 00:00:00 +0000</pubDate><guid>https://lppgo.github.io/post/golang/023_go-test%E7%AC%94%E8%AE%B0/</guid><description>Go Test笔记 Go Test 一个完整的单测指令可以是 go test -v -cover -gcflags=all=-l -coverprofile=coverage.out -gcflags=all=-l 防止编译器内联优化导致单测出现问题 1.1 go test go test -run=^TestDo -v ./ 这里介绍几个常用的参数： -bench regexp 执行相</description></item></channel></rss>