<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>C++ on Even - A super concise theme for Hugo</title><link>https://lppgo.github.io/tags/c++/</link><description>Recent content in C++ on Even - A super concise theme for Hugo</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 03 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://lppgo.github.io/tags/c++/index.xml" rel="self" type="application/rss+xml"/><item><title>007-Cpp debug 工具dbg-macro</title><link>https://lppgo.github.io/post/c++/007-cpp-%E7%9A%84-debug-%E5%B7%A5%E5%85%B7dbg-macro/</link><pubDate>Wed, 03 May 2023 00:00:00 +0000</pubDate><guid>https://lppgo.github.io/post/c++/007-cpp-%E7%9A%84-debug-%E5%B7%A5%E5%85%B7dbg-macro/</guid><description>Cpp debug 工具dbg-macro 1: 介绍 https://github.com/sharkdp/dbg-macro 打日志是 C++ 开发中必不可少的一种 debug 方式，dbg-macro 受 Rust 语言中 的 dbg 启发，提供比 printf 和 std::cout 更好的宏函数。主要</description></item><item><title>006-Cpp webServer示例</title><link>https://lppgo.github.io/post/c++/006-cpp-webserver%E7%A4%BA%E4%BE%8B/</link><pubDate>Mon, 17 Apr 2023 00:00:00 +0000</pubDate><guid>https://lppgo.github.io/post/c++/006-cpp-webserver%E7%A4%BA%E4%BE%8B/</guid><description>Cpp webServer示例 1: 使用 c++11 标准库写一个 httpServer 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47</description></item><item><title>005-Cpp 动态内存分配函数</title><link>https://lppgo.github.io/post/c++/005-cpp-%E5%8A%A8%E6%80%81%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E5%87%BD%E6%95%B0/</link><pubDate>Tue, 11 Apr 2023 00:00:00 +0000</pubDate><guid>https://lppgo.github.io/post/c++/005-cpp-%E5%8A%A8%E6%80%81%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E5%87%BD%E6%95%B0/</guid><description>Cpp 动态内存分配函数 1: cpp 动态内存分配 2: malloc 3: calloc 4: realloc 5: new 6: demo.cpp 7: 总结与比较 1: cpp 动态内存分配 void* malloc(unsigned int size); void* realloc(void *ptr, unsigned int newsize); void* calloc(size_t numElements, size_t sizeOfElement); 加上一种new关键字，这四个</description></item><item><title>004-Cpp thread多线程用法整理</title><link>https://lppgo.github.io/post/c++/004-cpp-thread%E7%94%A8%E6%B3%95%E6%95%B4%E7%90%86/</link><pubDate>Fri, 10 Feb 2023 00:00:00 +0000</pubDate><guid>https://lppgo.github.io/post/c++/004-cpp-thread%E7%94%A8%E6%B3%95%E6%95%B4%E7%90%86/</guid><description>Cpp thread用法整理 1: Cpp thread 多线程 2: std::thread 类成员函数 3: 创建一个 thread 线程 4: mutex 和 std::lock_guard 的使用 4.1 mutex 1: Cpp thread 多线程 C++11 中加入了&amp;lt;thread&amp;gt;头文件，</description></item><item><title>03-C/Cpp常用头文件大全</title><link>https://lppgo.github.io/post/c++/003-cpp%E5%B8%B8%E7%94%A8%E5%A4%B4%E6%96%87%E4%BB%B6/</link><pubDate>Tue, 17 Jan 2023 00:00:00 +0000</pubDate><guid>https://lppgo.github.io/post/c++/003-cpp%E5%B8%B8%E7%94%A8%E5%A4%B4%E6%96%87%E4%BB%B6/</guid><description>C/Cpp常用头文件大全 1: C 头文件 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 include &amp;lt;assert.h&amp;gt; //设定插入点 include &amp;lt;ctype.h&amp;gt; //字符处理 include &amp;lt;errno.h&amp;gt; //定义错误码 include &amp;lt;float.h&amp;gt; //浮点数处理 include</description></item><item><title>002-CMakeLists.txt说明</title><link>https://lppgo.github.io/post/c++/002-cmakelists/</link><pubDate>Tue, 10 Jan 2023 00:00:00 +0000</pubDate><guid>https://lppgo.github.io/post/c++/002-cmakelists/</guid><description>CMakeLists.txt说明 1 C/C++基础 2 Vscode 安装 C/C++插件 3 task.json，launch.json 3.1 task.json 是编译当前文件的指令 3.2</description></item><item><title>01-C++VScode 配置</title><link>https://lppgo.github.io/post/c++/001-c++vscode%E9%85%8D%E7%BD%AE/</link><pubDate>Tue, 07 Sep 2021 00:00:00 +0000</pubDate><guid>https://lppgo.github.io/post/c++/001-c++vscode%E9%85%8D%E7%BD%AE/</guid><description>C++ VScode 配置 1 C/C++基础 2 Vscode 安装 C/C++插件 3 task.json，launch.json 3.1 task.json 是编译当前文件的指令 3.2 launch.json 3.3 c_cpp_properties.json 4 cmake 1 C/C++基</description></item></channel></rss>