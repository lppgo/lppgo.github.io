<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MQ on Even - A super concise theme for Hugo</title>
    <link>https://lppgo.github.io/tags/mq/</link>
    <description>Recent content in MQ on Even - A super concise theme for Hugo</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Fri, 05 Aug 2022 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://lppgo.github.io/tags/mq/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>01-kafka</title>
      <link>https://lppgo.github.io/post/%E4%B8%AD%E9%97%B4%E4%BB%B6/003-kafka/</link>
      <pubDate>Fri, 05 Aug 2022 00:00:00 +0000</pubDate>
      <guid>https://lppgo.github.io/post/%E4%B8%AD%E9%97%B4%E4%BB%B6/003-kafka/</guid>
      <description>&lt;div align=&#34;center&#34;&gt;&lt;font size=35&gt;消息队列Kafka&lt;/font&gt;&lt;/div&gt;&#xA;&lt;h1 id=&#34;1-introduction&#34;&gt;1: Introduction&lt;/h1&gt;&#xA;&lt;h1 id=&#34;2-arch-架构&#34;&gt;2: Arch 架构&lt;/h1&gt;&#xA;&lt;h1 id=&#34;3-可视化-tools&#34;&gt;3: 可视化 tools&lt;/h1&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//  kafka-map&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;https&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//github.com/dushixiang/kafka-map&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>01-消息队列Kafka和Pulsar选型</title>
      <link>https://lppgo.github.io/post/%E4%B8%AD%E9%97%B4%E4%BB%B6/001-%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97kafka%E5%92%8Cpulsar%E9%80%89%E5%9E%8B/</link>
      <pubDate>Thu, 17 Mar 2022 00:00:00 +0000</pubDate>
      <guid>https://lppgo.github.io/post/%E4%B8%AD%E9%97%B4%E4%BB%B6/001-%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97kafka%E5%92%8Cpulsar%E9%80%89%E5%9E%8B/</guid>
      <description>&lt;div align=&#34;center&#34;&gt;&lt;font size=35&gt;消息队列Kafka和Pulsar选型&lt;/font&gt;&lt;/div&gt;&#xA;&lt;h1 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#table-of-contents&#34;&gt;Table of Contents&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#1-%E4%B8%9A%E5%8A%A1%E5%9C%BA%E6%99%AF&#34;&gt;1: 业务场景&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#11-%E4%B8%9A%E5%8A%A1%E5%9C%BA%E6%99%AF%E6%8F%8F%E8%BF%B0&#34;&gt;1.1 业务场景描述&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#12-%E4%B8%9A%E5%8A%A1%E5%9C%BA%E6%99%AF-feature&#34;&gt;1.2 业务场景 feature&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#2%E6%B6%88%E6%81%AF%E4%B8%AD%E9%97%B4%E4%BB%B6&#34;&gt;2：消息中间件&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#3-kafka-%E7%89%B9%E6%80%A7&#34;&gt;3: Kafka 特性&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#4-pulsar-%E7%89%B9%E6%80%A7&#34;&gt;4: Pulsar 特性&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#5-kafka-%E5%92%8C-pulsar-%E5%AF%B9%E6%AF%94&#34;&gt;5: Kafka 和 Pulsar 对比&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;1-业务场景&#34;&gt;1: 业务场景&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/K6xj4LfplB16Q_DfQL75PA&#34;&gt;https://mp.weixin.qq.com/s/K6xj4LfplB16Q_DfQL75PA&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;11-业务场景描述&#34;&gt;1.1 业务场景描述&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;我们需要一个把实时的交易数据进行持久化保存，并且能快速的给其他服务提供最新的交易数据;&lt;/li&gt;&#xA;&lt;li&gt;当服务启动或者重启后，能快速提供完整的并且最新的交易数据;&lt;/li&gt;&#xA;&lt;li&gt;现有的机制是每个订单使用 go 协程直接写入 Mysql 数据库,对数据库的压力比较大，且系统的延迟比较高;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;12-业务场景-feature&#34;&gt;1.2 业务场景 feature&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;解耦，降低数据数据库性能导致的整个服务延迟;&lt;/li&gt;&#xA;&lt;li&gt;数据完整的，及时地进行持久化;&lt;/li&gt;&#xA;&lt;li&gt;交易数据能，迅速的提供给其他需要数据的服务;&lt;/li&gt;&#xA;&lt;li&gt;流量消峰，减少峰值流量直接对数据库服务造成的冲击, 提高系统的稳定性;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;2消息中间件&#34;&gt;2：消息中间件&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;适合用消息中间件解决上述问题;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;(1) &lt;strong&gt;解耦:&lt;/strong&gt; 将一个流程的上游和下游拆开，上游专注生产消息，下游专注处理消息;&lt;/li&gt;&#xA;&lt;li&gt;(2) &lt;strong&gt;广播:&lt;/strong&gt; 一个上游生产的消息轻松被多个下游服务消费处理;&lt;/li&gt;&#xA;&lt;li&gt;(3) &lt;strong&gt;缓冲(流量削峰):&lt;/strong&gt; 如果上游服务流量突然暴涨,mq 可以做一个缓冲器的作用，下游根据消费能力对消息进行消费，避免暴涨的流量直接对下游服务造成冲击;&lt;/li&gt;&#xA;&lt;li&gt;(4) &lt;strong&gt;异步&lt;/strong&gt;: 生产者生产消息之后可以马上直接返回，消费者可以异步处理消息;&lt;/li&gt;&#xA;&lt;li&gt;(5) &lt;strong&gt;冗余&lt;/strong&gt;: 保留历史消息，处理失败或者当出现异常的时候可以进行重试或者回溯，防止消息丢失。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;近几年出现了一些关注度较高的消息队列中间件选型，如 Kafka、Pulsar、RocketMQ 等，首先从宏观上做一些对比：&#xA;&lt;table border=&#34;3&#34;&gt;&#xA;  &lt;caption&gt;&lt;font size=&#34;5&#34; color=&#34;blue&#34;&gt;常见MQ对比&lt;/font&gt;&lt;/caption&gt;&#xA;&#x9;&lt;tr&gt;&#xA;&#x9;    &lt;th&gt;MQ&lt;/th&gt;&#xA;&#x9;    &lt;th&gt;特性&lt;/th&gt;&#xA;&#x9;    &lt;th width=&#34;20px&#34;&gt;描述&lt;/th&gt;&#xA;&#x9;    &lt;th&gt;Kafka&lt;/th&gt;&#xA;&#x9;    &lt;th&gt;Pulsar&lt;/th&gt;&#xA;&#x9;    &lt;th&gt;RocketMQ&lt;/th&gt;&#xA;&#x9;    &lt;th&gt;RabbitMQ&lt;/th&gt;&#xA;&#x9;    &lt;th width=&#34;20px&#34;&gt;NSQ&lt;/th&gt;  &#xA;&#x9;    &lt;th&gt;我们的业务场景是否需要&lt;/th&gt;  &#xA;&#x9;&lt;/tr&gt;&#xA;  &lt;tr &gt;&#xA;      &lt;td&gt;推出时间&lt;/td&gt;&#xA;      &lt;td&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;/td&gt;&#xA;      &lt;td&gt;2012 年(Scala 和 Java) &lt;/td&gt;&#xA;      &lt;td&gt;2016 年(Java)&lt;/td&gt;&#xA;      &lt;td&gt;2012 年(Java)&lt;/td&gt;&#xA;      &lt;td&gt;2007 年(Erlang)&lt;/td&gt;&#xA;      &lt;td&gt;2013 年(Go)&lt;/td&gt;&#xA;      &lt;td&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;  &lt;tr &gt;&#xA;      &lt;td&gt;组织&lt;/td&gt;&#xA;      &lt;td&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;/td&gt;&#xA;      &lt;td&gt;Linkin 开源，Apache &lt;/td&gt;&#xA;      &lt;td&gt;Yahoo 开源，Apache &lt;/td&gt;&#xA;      &lt;td&gt;阿里开源，Apache &lt;/td&gt;&#xA;      &lt;td&gt;Pivotal 开源,Mozilla&lt;/td&gt;&#xA;      &lt;td&gt;MIT&lt;/td&gt;&#xA;      &lt;td&gt;&lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA;&#x9;&lt;tr &gt;&#xA;&#x9;    &lt;td rowspan=&#34;13&#34;&gt;&lt;b&gt;功能&lt;/b&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;b&gt;消费模式&lt;/b&gt;&lt;/td&gt;&#xA;      &lt;td&gt;consumer消费消息的方式&lt;/td&gt;&#xA;      &lt;td&gt;pull&lt;/td&gt;&#xA;      &lt;td&gt;push&lt;/td&gt;&#xA;      &lt;td&gt;pull&lt;/td&gt;&#xA;      &lt;td&gt;push&lt;/td&gt;&#xA;      &lt;td&gt;push&lt;/td&gt;&#xA;      &lt;td&gt;?&lt;/td&gt;&#xA;&#x9;&lt;/tr&gt;&#xA;&#x9;&lt;tr&gt;&#xA;      &lt;td&gt;&lt;b&gt;延迟队列&lt;/b&gt;&lt;/td&gt;&#xA;      &lt;td&gt;消息投递延迟&lt;/td&gt;&#xA;      &lt;td&gt;&lt;font color=&#34;red&#34;&gt;No&lt;/font&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;font color=&#34;green&#34;&gt;Yes&lt;/font&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;font color=&#34;green&#34;&gt;Yes&lt;/font&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;font color=&#34;green&#34;&gt;Yes&lt;/font&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;font color=&#34;green&#34;&gt;Yes&lt;/font&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;/td&gt;&#xA;&#x9;&lt;/tr&gt;&#xA;&#x9;&lt;tr&gt;&#xA;      &lt;td&gt;&lt;b&gt;死信队列&lt;/b&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;font color=&#34;red&#34;&gt;No&lt;/font&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;font color=&#34;green&#34;&gt;Yes&lt;/font&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;font color=&#34;green&#34;&gt;Yes&lt;/font&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;font color=&#34;green&#34;&gt;Yes&lt;/font&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;font color=&#34;red&#34;&gt;No&lt;/font&gt;&lt;/td&gt;&#xA;      &lt;td&gt;?&lt;/td&gt;&#xA;&#x9;&lt;/tr&gt;&#xA;&#x9;&lt;tr&gt;&#xA;      &lt;td&gt;&lt;b&gt;优先级队列&lt;/b&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;font color=&#34;red&#34;&gt;No&lt;/font&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;font color=&#34;red&#34;&gt;No&lt;/font&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;font color=&#34;red&#34;&gt;No&lt;/font&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;font color=&#34;green&#34;&gt;Yes&lt;/font&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;font color=&#34;red&#34;&gt;No&lt;/font&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;/td&gt;&#xA;&#x9;&lt;/tr&gt;&#xA;&#x9;&lt;tr&gt;&#xA;      &lt;td&gt;&lt;b&gt;消息回溯&lt;/b&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;font color=&#34;green&#34;&gt;Yes&lt;/font&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;font color=&#34;green&#34;&gt;Yes&lt;/font&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;font color=&#34;green&#34;&gt;Yes&lt;/font&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;font color=&#34;red&#34;&gt;No&lt;/font&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;font color=&#34;red&#34;&gt;No&lt;/font&gt;&lt;/td&gt;&#xA;      &lt;td&gt;需要&lt;/td&gt;&#xA;&#x9;&lt;/tr&gt;&#xA;&#x9;&lt;tr&gt;&#xA;      &lt;td&gt;&lt;b&gt;消息持久化&lt;/b&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;font color=&#34;green&#34;&gt;Yes&lt;/font&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;font color=&#34;green&#34;&gt;Yes&lt;/font&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;font color=&#34;green&#34;&gt;Yes&lt;/font&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;font color=&#34;green&#34;&gt;Yes&lt;/font&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;font color=&#34;green&#34;&gt;Yes&lt;/font&gt;&lt;/td&gt;&#xA;      &lt;td&gt;需要&lt;/td&gt;&#xA;&#x9;&lt;/tr&gt;&#xA;&#x9;&lt;tr&gt;&#xA;      &lt;td&gt;&lt;b&gt;消息确认机制&lt;/b&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;/td&gt;&#xA;      &lt;td&gt;offset&lt;/td&gt;&#xA;      &lt;td&gt;offset+单条&lt;/td&gt;&#xA;      &lt;td&gt;offset&lt;/td&gt;&#xA;      &lt;td&gt;单条&lt;/td&gt;&#xA;      &lt;td&gt;单条&lt;/td&gt;&#xA;      &lt;td&gt;需要&lt;/td&gt;&#xA;&#x9;&lt;/tr&gt;&#xA;&#x9;&lt;tr&gt;&#xA;      &lt;td&gt;&lt;b&gt;消息TTL&lt;/b&gt;&lt;/td&gt;&#xA;      &lt;td&gt;消息TTL表示一条消息的生存时间，如果消息发出来后，在TTL的时间内没有消费者进行消费，消息队列会将消息删除或者放入死信队列中&lt;/td&gt;&#xA;      &lt;td&gt;&lt;font color=&#34;green&#34;&gt;Yes&lt;/font&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;font color=&#34;green&#34;&gt;Yes&lt;/font&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;font color=&#34;green&#34;&gt;Yes&lt;/font&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;font color=&#34;green&#34;&gt;Yes&lt;/font&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;font color=&#34;red&#34;&gt;No&lt;/font&gt;&lt;/td&gt;&#xA;      &lt;td&gt;需要&lt;/td&gt;&#xA;&#x9;&lt;/tr&gt;&#xA;&#x9;&lt;tr&gt;&#xA;      &lt;td&gt;&lt;b&gt;多租户隔离&lt;/b&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;font color=&#34;red&#34;&gt;No&lt;/font&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;font color=&#34;green&#34;&gt;Yes&lt;/font&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;font color=&#34;red&#34;&gt;No&lt;/font&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;font color=&#34;red&#34;&gt;No&lt;/font&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;font color=&#34;red&#34;&gt;No&lt;/font&gt;&lt;/td&gt;&#xA;      &lt;td&gt;?&lt;/td&gt;&#xA;&#x9;&lt;/tr&gt;&#xA;&#x9;&lt;tr&gt;&#xA;      &lt;td&gt;&lt;b&gt;消息顺序性&lt;/b&gt;&lt;/td&gt;&#xA;      &lt;td&gt;消息顺序性是指保证消息有序。消息消费顺序跟生产的顺序保持一致&lt;/td&gt;&#xA;      &lt;td&gt;分区有序&lt;/td&gt;&#xA;      &lt;td&gt;stream模式有序&lt;/td&gt;&#xA;      &lt;td&gt;consumer加锁&lt;/td&gt;&#xA;      &lt;td&gt;&lt;font color=&#34;red&#34;&gt;No&lt;/font&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;font color=&#34;red&#34;&gt;No&lt;/font&gt;&lt;/td&gt;&#xA;      &lt;td&gt;?&lt;/td&gt;&#xA;&#x9;&lt;/tr&gt;&#xA;&#x9;&lt;tr&gt;&#xA;      &lt;td&gt;&lt;b&gt;消息查询&lt;/b&gt;&lt;/td&gt;&#xA;      &lt;td&gt;查看MQ中消息的内容，比如通过某个MessageKey/ID，查询到MQ的具体消息&lt;/td&gt;&#xA;      &lt;td&gt;&lt;font color=&#34;red&#34;&gt;No&lt;/font&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;font color=&#34;green&#34;&gt;Yes&lt;/font&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;font color=&#34;green&#34;&gt;Yes&lt;/font&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;font color=&#34;green&#34;&gt;Yes&lt;/font&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;font color=&#34;red&#34;&gt;No&lt;/font&gt;&lt;/td&gt;&#xA;      &lt;td&gt;需要&lt;/td&gt;&#xA;&#x9;&lt;/tr&gt;&#xA;&#x9;&lt;tr&gt;&#xA;      &lt;td&gt;&lt;b&gt;消费模式&lt;/b&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;/td&gt;&#xA;      &lt;td&gt;stream模式&lt;/td&gt;&#xA;      &lt;td&gt;流模式+队列模式&lt;/td&gt;&#xA;      &lt;td&gt;广播模式+集群模式&lt;/td&gt;&#xA;      &lt;td&gt;队列模式&lt;/td&gt;&#xA;      &lt;td&gt;队列模式&lt;/td&gt;&#xA;      &lt;td&gt;需要，根据场景选择消费模式&lt;/td&gt;&#xA;&#x9;&lt;/tr&gt;&#xA;&#x9;&lt;tr&gt;&#xA;      &lt;td&gt;&lt;b&gt;消息可靠性&lt;/b&gt;&lt;/td&gt;&#xA;      &lt;td&gt;以生产的消息，发送到mq,防止丢失&lt;/td&gt;&#xA;      &lt;td&gt;request.required.acks&lt;/td&gt;&#xA;      &lt;td&gt;Ack Quorum Size(Qa)&lt;/td&gt;&#xA;      &lt;td&gt;RocketMQ与Kafka类似&lt;/td&gt;&#xA;      &lt;td&gt;RabbitMQ是主从架构，通过镜像环形队列实现多副本及强一致性语义的&lt;/td&gt;&#xA;      &lt;td&gt;NSQ会通过go-diskqueue组件将消息落盘到本地文件中，通过mem-queue-size参数控制内存中队列大小，如果mem-queue-size=0每条消息都会存储到磁盘里，不用担心节点重启引起的消息丢失。但由于是存储在本地磁盘中，如果节点离线，堆积在节点磁盘里的消息会丢失&lt;/td&gt;&#xA;      &lt;td&gt;&lt;font color=&#34;red&#34;&gt;非常重要&lt;font&gt;&lt;/td&gt;&#xA;&#x9;&lt;/tr&gt;&#xA;  &lt;tr &gt;&#xA;&#x9;    &lt;td rowspan=&#34;3&#34;&gt;&lt;b&gt;性能&lt;/b&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;b&gt;单机吞吐量&lt;/b&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;/td&gt;&#xA;      &lt;td&gt;605MB/S&lt;/td&gt;&#xA;      &lt;td&gt;605MB/S&lt;/td&gt;&#xA;      &lt;td&gt;大概500MB/S&lt;/td&gt;&#xA;      &lt;td&gt;38MB/S&lt;/td&gt;&#xA;      &lt;td&gt;?&lt;/td&gt;&#xA;      &lt;td&gt;&lt;font color=&#34;red&#34;&gt;重要&lt;font&gt;&lt;/td&gt;&#xA;&#x9;&lt;/tr&gt;&#xA;  &lt;tr &gt;&#xA;      &lt;td&gt;&lt;b&gt;消息延迟&lt;/b&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;/td&gt;&#xA;      &lt;td&gt;5ms&lt;/td&gt;&#xA;      &lt;td&gt;5ms&lt;/td&gt;&#xA;      &lt;td&gt;ms级&lt;/td&gt;&#xA;      &lt;td&gt;us级&lt;/td&gt;&#xA;      &lt;td&gt;？&lt;/td&gt;&#xA;      &lt;td&gt;&lt;font color=&#34;red&#34;&gt;非常重要&lt;font&gt;&lt;/td&gt;&#xA;&#x9;&lt;/tr&gt;&#xA;  &lt;tr &gt;&#xA;      &lt;td&gt;&lt;b&gt;支持Topics数&lt;/b&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;/td&gt;&#xA;      &lt;td&gt;百~千，过多会影响性能&lt;/td&gt;&#xA;      &lt;td&gt;百万个&lt;/td&gt;&#xA;      &lt;td&gt;百~千&lt;/td&gt;&#xA;      &lt;td&gt;几千&lt;/td&gt;&#xA;      &lt;td&gt;?&lt;/td&gt;&#xA;      &lt;td&gt;&lt;/td&gt;&#xA;&#x9;&lt;/tr&gt;&#xA;  &lt;tr &gt;&#xA;&#x9;    &lt;td rowspan=&#34;3&#34;&gt;&lt;b&gt;运维与可靠性&lt;/b&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;b&gt;高可用&lt;/b&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;/td&gt;&#xA;      &lt;td&gt;分布式架构&lt;/td&gt;&#xA;      &lt;td&gt;分布式架构&lt;/td&gt;&#xA;      &lt;td&gt;Master/Slave&lt;/td&gt;&#xA;      &lt;td&gt;Master/Slave&lt;/td&gt;&#xA;      &lt;td&gt;分布式架构&lt;/td&gt;&#xA;      &lt;td&gt;&lt;font color=&#34;red&#34;&gt;非常重要&lt;font&gt;&lt;/td&gt;&#xA;&#x9;&lt;/tr&gt;&#xA;  &lt;tr &gt;&#xA;      &lt;td&gt;&lt;b&gt;集群扩容&lt;/b&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;/td&gt;&#xA;      &lt;td&gt;增加node,node之间会复制数据均衡&lt;/td&gt;&#xA;      &lt;td&gt;增加node,通过新增加分片进行负载均衡&lt;/td&gt;&#xA;      &lt;td&gt;增加节点&lt;/td&gt;&#xA;      &lt;td&gt;增加节点&lt;/td&gt;&#xA;      &lt;td&gt;增加节点&lt;/td&gt;&#xA;      &lt;td&gt;&lt;/td&gt;&#xA;&#x9;&lt;/tr&gt;&#xA;  &lt;tr &gt;&#xA;      &lt;td&gt;&lt;b&gt;异地容灾&lt;/b&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;/td&gt;&#xA;      &lt;td&gt;可&lt;/td&gt;&#xA;      &lt;td&gt;可&lt;/td&gt;&#xA;      &lt;td&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;/td&gt;&#xA;      &lt;td&gt;&lt;/td&gt;&#xA;&#x9;&lt;/tr&gt;&#xA;&lt;/table&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;3-kafka-特性&#34;&gt;3: Kafka 特性&lt;/h1&gt;&#xA;&lt;h1 id=&#34;4-pulsar-特性&#34;&gt;4: Pulsar 特性&lt;/h1&gt;&#xA;&lt;h1 id=&#34;5-kafka-和-pulsar-对比&#34;&gt;5: Kafka 和 Pulsar 对比&lt;/h1&gt;</description>
    </item>
  </channel>
</rss>
